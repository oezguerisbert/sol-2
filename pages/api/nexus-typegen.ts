/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  History: { // root type
    historyid?: string | null; // String
    roomRoomid?: string | null; // String
    status?: string | null; // String
    timestamp?: NexusGenScalars['DateTime'] | null; // DateTime
    userUserid?: string | null; // String
  }
  Mutation: {};
  Query: {};
  Room: { // root type
    description?: string | null; // String
    maxmembers?: number | null; // Int
    roomid?: string | null; // String
    title?: string | null; // String
  }
  Times: { // root type
    end?: NexusGenScalars['DateTime'] | null; // DateTime
    start?: NexusGenScalars['DateTime'] | null; // DateTime
    timesid?: string | null; // String
    weekId?: string | null; // String
  }
  User: { // root type
    email?: string | null; // String
    password?: string | null; // String
    role?: string | null; // String
    roomId?: string | null; // String
    userid?: string | null; // String
  }
  Week: { // root type
    weekid?: string | null; // String
    weeknumber?: number | null; // Int
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  History: { // field return type
    historyid: string | null; // String
    room: NexusGenRootTypes['Room'] | null; // Room
    roomRoomid: string | null; // String
    status: string | null; // String
    timestamp: NexusGenScalars['DateTime'] | null; // DateTime
    user: NexusGenRootTypes['User'] | null; // User
    userUserid: string | null; // String
  }
  Mutation: { // field return type
    editRoom: NexusGenRootTypes['Room'] | null; // Room
    editUser: NexusGenRootTypes['User'] | null; // User
    edittime: NexusGenRootTypes['Times'] | null; // Times
    login: NexusGenRootTypes['User'] | null; // User
    signup: NexusGenRootTypes['User'] | null; // User
    userEnterRoom: NexusGenRootTypes['Room'] | null; // Room
    userLeaveRoom: NexusGenRootTypes['Room'] | null; // Room
  }
  Query: { // field return type
    alltimes: Array<NexusGenRootTypes['Times'] | null> | null; // [Times]
    me: NexusGenRootTypes['User'] | null; // User
    room: NexusGenRootTypes['Room'] | null; // Room
    rooms: Array<NexusGenRootTypes['Room'] | null> | null; // [Room]
    statistics: Array<NexusGenRootTypes['History'] | null> | null; // [History]
    times: Array<NexusGenRootTypes['Times'] | null> | null; // [Times]
    user: NexusGenRootTypes['User'] | null; // User
    users: Array<NexusGenRootTypes['User'] | null> | null; // [User]
  }
  Room: { // field return type
    description: string | null; // String
    maxmembers: number | null; // Int
    members: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    roomid: string | null; // String
    title: string | null; // String
  }
  Times: { // field return type
    end: NexusGenScalars['DateTime'] | null; // DateTime
    start: NexusGenScalars['DateTime'] | null; // DateTime
    timesid: string | null; // String
    week: Array<NexusGenRootTypes['Week'] | null> | null; // [Week]
    weekId: string | null; // String
  }
  User: { // field return type
    email: string | null; // String
    password: string | null; // String
    role: string | null; // String
    room: NexusGenRootTypes['Room'] | null; // Room
    roomId: string | null; // String
    userid: string | null; // String
  }
  Week: { // field return type
    days: Array<NexusGenRootTypes['Times'] | null> | null; // [Times]
    weekid: string | null; // String
    weeknumber: number | null; // Int
  }
}

export interface NexusGenFieldTypeNames {
  History: { // field return type name
    historyid: 'String'
    room: 'Room'
    roomRoomid: 'String'
    status: 'String'
    timestamp: 'DateTime'
    user: 'User'
    userUserid: 'String'
  }
  Mutation: { // field return type name
    editRoom: 'Room'
    editUser: 'User'
    edittime: 'Times'
    login: 'User'
    signup: 'User'
    userEnterRoom: 'Room'
    userLeaveRoom: 'Room'
  }
  Query: { // field return type name
    alltimes: 'Times'
    me: 'User'
    room: 'Room'
    rooms: 'Room'
    statistics: 'History'
    times: 'Times'
    user: 'User'
    users: 'User'
  }
  Room: { // field return type name
    description: 'String'
    maxmembers: 'Int'
    members: 'User'
    roomid: 'String'
    title: 'String'
  }
  Times: { // field return type name
    end: 'DateTime'
    start: 'DateTime'
    timesid: 'String'
    week: 'Week'
    weekId: 'String'
  }
  User: { // field return type name
    email: 'String'
    password: 'String'
    role: 'String'
    room: 'Room'
    roomId: 'String'
    userid: 'String'
  }
  Week: { // field return type name
    days: 'Times'
    weekid: 'String'
    weeknumber: 'Int'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    editRoom: { // args
      description: string; // String!
      maxmembers: number; // Int!
      roomid: string; // String!
      title: string; // String!
    }
    editUser: { // args
      newemail: string; // String!
      oldemail: string; // String!
      password: string; // String!
      role: string; // String!
    }
    edittime: { // args
      endtime: string; // String!
      starttime: string; // String!
      timesid: string; // String!
    }
    login: { // args
      email: string; // String!
      password: string; // String!
    }
    signup: { // args
      email: string; // String!
      password: string; // String!
    }
    userEnterRoom: { // args
      roomid: string; // String!
      userid: string; // String!
    }
    userLeaveRoom: { // args
      roomid: string; // String!
      userid: string; // String!
    }
  }
  Query: {
    room: { // args
      roomId: string; // String!
    }
    statistics: { // args
      roomid?: string | null; // String
    }
    times: { // args
      weeknumber?: number | null; // Int
    }
    user: { // args
      id: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}